image: docker:latest

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

cache:
  key: "$CI_PROJECT_PATH"
  paths:
    - .gradle/

stages:
  - build
#  - test
  - package
  - deploy

build-regular:
  stage: build
  image: bellsoft/liberica-openjdk-centos:11
  before_script:  
    - export GRADLE_USER_HOME=`pwd`/.gradle
  script: "./gradlew clean build -x test --parallel"
  tags:
    - gradle-user
  artifacts:
    when: always
    paths:
      - build/libs/*.jar
      - build/reports/tests/

package-docker-master:
  stage: package
  only:
    - master
  tags:
    - docker
  script:
    - docker login -u $DOCKER_ESSTU_USER -p $DOCKER_ESSTU_PASSWORD https://docker.esstu.ru:443
    - docker build --network=host -t docker.esstu.ru:443/entrant/entrant-lk:master .
    - docker push docker.esstu.ru:443/entrant/entrant-lk:master

package-docker-develop:
  stage: package
  only:
    - develop
  tags:
    - docker
  script:
    - docker login -u $DOCKER_ESSTU_USER -p $DOCKER_ESSTU_PASSWORD docker.esstu.ru:443
    - docker build -t docker.esstu.ru:443/entrant/entrant-lk:develop .
    - docker push docker.esstu.ru:443/entrant/entrant-lk:develop

package-docker-tags:
  stage: package
  only:
    - repositoryTags
    - tags
  tags:
    - docker
  script:
    - docker login -u $DOCKER_ESSTU_USER -p $DOCKER_ESSTU_PASSWORD docker.esstu.ru:443
    - docker build -t docker.esstu.ru:443/entrant/entrant-lk:$CI_COMMIT_TAG .
    - docker push docker.esstu.ru:443/entrant/entrant-lk:$CI_COMMIT_TAG

deploy-docker-develop:
  image: kroniak/ssh-client
  stage: deploy
  only:
    - develop
  tags:
    - docker
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "$SSH_PRIVATE_KEY_TEST" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
  script:
    - ssh vladimir@$SSH_HOSTNAME_MASTER 'cd docker/; ./entrant-lk-api-update-develop.sh;'

deploy-docker-master:
  image: kroniak/ssh-client
  stage: deploy
  only:
    - master
  tags:
    - docker
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "$SSH_PRIVATE_KEY_MASTER" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
  script:
    - ssh vladimir@$SSH_HOSTNAME_MASTER 'cd docker/; ./entrant-lk-api-update.sh;'
